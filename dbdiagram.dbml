// Creative Agency Database Schema
// DBML format for dbdiagram.io

// Enum Tables
Table user_roles {
  id uuid [pk]
  name varchar(20) [unique, not null, note: "admin, creator"]
  description text
  created_at timestamp
}

Table content_statuses {
  id uuid [pk]
  name varchar(20) [unique, not null, note: "draft, review, published, archived"]
  description text
  created_at timestamp
}

Table submission_statuses {
  id uuid [pk]
  name varchar(20) [unique, not null, note: "unread, read, responded, archived"]
  description text
  created_at timestamp
}

// Action type enum for activity logs
Table action_types {
  id uuid [pk]
  name varchar(20) [unique, not null, note: "create, update, delete, publish, unpublish, archive"]
  description text
  created_at timestamp
}

// Users & Team Members
Table users {
  id uuid [pk]
  email varchar(255) [unique, not null]
  first_name varchar(100)
  last_name varchar(100)
  role_id uuid [ref: > user_roles.id, not null]
  avatar_url text
  created_at timestamp
  updated_at timestamp

  indexes {
    email
    role_id
  }
}

Table team_members {
  id uuid [pk]
  name varchar(100) [not null]
  role varchar(100) [not null]
  bio text
  avatar_url text
  email varchar(255)
  social_links jsonb
  is_published boolean [default: true]
  sort_order smallint [default: 0]
  user_id uuid [ref: > users.id]
  created_by_user_id uuid [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    is_published
    user_id
    created_by_user_id
  }
}

// Content Organization
Table tags {
  id uuid [pk]
  name varchar(50) [unique, not null]
  slug varchar(50) [unique, not null]
  created_by_user_id uuid [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    slug
    created_by_user_id
  }
}

Table services {
  id uuid [pk]
  name varchar(100) [not null]
  slug varchar(100) [unique, not null]
  description text [not null]
  icon varchar(50)
  is_published boolean [default: true]
  sort_order smallint [default: 0]
  created_by_user_id uuid [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    slug
    is_published
    created_by_user_id
  }
}

// Content Tables
Table projects {
  id uuid [pk]
  title varchar(100) [not null]
  slug varchar(100) [unique, not null]
  summary text [not null]
  content text [not null]
  client_name varchar(100)
  completed_date date
  featured_image_url text
  gallery_images jsonb
  meta_title varchar(100)
  meta_description varchar(160)
  is_published boolean [default: true]
  is_featured boolean [default: false]
  sort_order smallint [default: 0]
  status_id uuid [ref: > content_statuses.id, not null]
  locale varchar(10) [default: 'en']
  structured_data jsonb
  created_by_user_id uuid [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    slug
    is_published
    is_featured
    status_id
    created_at
    locale
    created_by_user_id
  }
}

Table blog_posts {
  id uuid [pk]
  title varchar(100) [not null]
  slug varchar(100) [unique, not null]
  summary text [not null]
  content text [not null]
  featured_image_url text
  author_id uuid [ref: > team_members.id, not null]
  meta_title varchar(100)
  meta_description varchar(160)
  is_published boolean [default: true]
  is_featured boolean [default: false]
  status_id uuid [ref: > content_statuses.id, not null]
  locale varchar(10) [default: 'en']
  structured_data jsonb
  reading_time smallint
  created_by_user_id uuid [ref: > users.id, not null]
  created_at timestamp
  updated_at timestamp
  published_at timestamp

  indexes {
    slug
    author_id
    is_published
    is_featured
    status_id
    created_at
    published_at
    locale
    created_by_user_id
  }
}

// Junction Tables
Table projects_services {
  id uuid [pk]
  project_id uuid [ref: > projects.id, not null]
  service_id uuid [ref: > services.id, not null]
  created_at timestamp

  indexes {
    (project_id, service_id) [unique]
    project_id
    service_id
  }
}

Table projects_tags {
  id uuid [pk]
  project_id uuid [ref: > projects.id, not null]
  tag_id uuid [ref: > tags.id, not null]
  created_at timestamp

  indexes {
    (project_id, tag_id) [unique]
    project_id
    tag_id
  }
}

Table blog_posts_tags {
  id uuid [pk]
  blog_post_id uuid [ref: > blog_posts.id, not null]
  tag_id uuid [ref: > tags.id, not null]
  created_at timestamp

  indexes {
    (blog_post_id, tag_id) [unique]
    blog_post_id
    tag_id
  }
}

// Contact Forms
Table contact_submissions {
  id uuid [pk]
  name varchar(100) [not null]
  email varchar(255) [not null]
  phone varchar(20)
  message text [not null]
  company varchar(100)
  service_interest uuid [ref: > services.id]
  status_id uuid [ref: > submission_statuses.id, not null]
  assigned_to_user_id uuid [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    email
    status_id
    created_at
    service_interest
    assigned_to_user_id
  }
}

// Activity Logs
Table activity_logs {
  id uuid [pk]
  user_id uuid [ref: > users.id]
  entity_type varchar(50) [not null, note: "blog_post, project, etc."]
  entity_id uuid [not null]
  action_type_id uuid [ref: > action_types.id, not null]
  changes jsonb [note: "Stores old and new values"]
  ip_address varchar(45)
  user_agent text
  created_at timestamp

  indexes {
    user_id
    entity_type
    entity_id
    action_type_id
    created_at
  }
}

// Analytics Tables
Table site_visits {
  id uuid [pk]
  visitor_id varchar(100) [not null, note: "Anonymous identifier (cookie/fingerprint)"]
  ip_address varchar(45)
  user_agent text
  referrer_url text
  landing_page text [not null]
  country varchar(2)
  region varchar(100)
  city varchar(100)
  browser varchar(50)
  browser_version varchar(50)
  os varchar(50)
  os_version varchar(50)
  device_type varchar(20) [note: "mobile, tablet, desktop"]
  is_bot boolean [default: false]
  first_visit_at timestamp
  last_visit_at timestamp
  visit_count integer [default: 1]
  utm_source varchar(100)
  utm_medium varchar(100)
  utm_campaign varchar(100)
  utm_term varchar(100)
  utm_content varchar(100)
  user_id uuid [ref: > users.id]
  created_at timestamp

  indexes {
    visitor_id
    ip_address
    first_visit_at
    last_visit_at
    country
    device_type
    user_id
  }
}

Table page_views {
  id uuid [pk]
  visit_id uuid [ref: > site_visits.id, not null]
  url_path text [not null]
  page_title text
  query_params jsonb
  hash_fragment text
  time_on_page integer [note: "in seconds"]
  exit_page boolean [default: false]
  previous_page_id uuid [ref: > page_views.id]
  events jsonb [note: "Clicks, form submissions, etc."]
  created_at timestamp

  indexes {
    visit_id
    url_path
    created_at
    exit_page
  }
}

// Views (represented in DBML for documentation)
// These would be implemented as SQL views in the actual database
Table view_blog_posts {
  id uuid
  title varchar(100)
  slug varchar(100)
  summary text
  content text
  featured_image_url text
  author_id uuid
  author_name text
  meta_title varchar(100)
  meta_description varchar(160)
  is_published boolean
  is_featured boolean
  status_id uuid
  status_name varchar(20)
  status_description text
  locale varchar(10)
  reading_time smallint
  structured_data jsonb
  tags text[] [note: "Array of tag names"]
  created_by_user_id uuid
  creator_email varchar(255)
  creator_name text
  created_at timestamp
  updated_at timestamp
  published_at timestamp

  [note: 'View that combines blog post data with readable author and tag information']
}

Table view_projects {
  id uuid
  title varchar(100)
  slug varchar(100)
  summary text
  content text
  client_name varchar(100)
  completed_date date
  featured_image_url text
  gallery_images jsonb
  meta_title varchar(100)
  meta_description varchar(160)
  is_published boolean
  is_featured boolean
  sort_order smallint
  status_id uuid
  status_name varchar(20)
  status_description text
  locale varchar(10)
  structured_data jsonb
  tags text[] [note: "Array of tag names"]
  services text[] [note: "Array of service names"]
  created_by_user_id uuid
  creator_email varchar(255)
  creator_name text
  created_at timestamp
  updated_at timestamp

  [note: 'View that combines project data with readable status, tags and services information']
}

Table view_contact_submissions {
  id uuid
  name varchar(100)
  email varchar(255)
  phone varchar(20)
  message text
  company varchar(100)
  service_interest uuid
  service_name varchar(100)
  status_id uuid
  status_name varchar(20)
  assigned_to_user_id uuid
  assigned_to_name text
  created_at timestamp
  updated_at timestamp

  [note: 'View that combines contact submission data with service and status information']
}

// Analytics Views for Documentation
Table view_daily_page_views {
  date date
  url_path text
  view_count bigint
  avg_time_on_page numeric

  [note: 'View for daily page view metrics']
}

Table view_visitor_stats {
  date date
  new_visitors bigint
  returning_visitors bigint
  total_visitors bigint
  mobile_count bigint
  tablet_count bigint
  desktop_count bigint

  [note: 'View for daily visitor statistics']
}

// Relationships (for visual clarity)
// Many-to-many relationships
Ref: projects.id <> services.id [through: projects_services]
Ref: projects.id <> tags.id [through: projects_tags]
Ref: blog_posts.id <> tags.id [through: blog_posts_tags]

// Analytics relationships
Ref: page_views.visit_id > site_visits.id 